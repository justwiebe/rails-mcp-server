#!/usr/bin/env ruby

require "pathname"
require "fileutils"
require "json"

# ANSI color codes
class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def green
    colorize(32)
  end

  def blue
    colorize(34)
  end

  def yellow
    colorize(33)
  end

  def red
    colorize(31)
  end
end

# Get the absolute path to the project directory
project_dir = Pathname.new(__FILE__).dirname.parent.expand_path

# Print banner
puts "============================================".blue
puts "     Rails MCP Server Setup for Claude      ".blue
puts "============================================".blue
puts

# Determine the Rails MCP config directory based on platform
def get_rails_mcp_config_dir
  if RUBY_PLATFORM.match?(/mswin|mingw|cygwin/)
    # Windows
    File.join(ENV["APPDATA"], "rails-mcp")
  else
    # Linux/Unix - honor XDG_CONFIG_HOME
    xdg_config_home = ENV["XDG_CONFIG_HOME"]
    if xdg_config_home && !xdg_config_home.empty?
      File.join(xdg_config_home, "rails-mcp")
    else
      File.join(Dir.home, ".config", "rails-mcp")
    end
  end
end

rails_mcp_config_dir = get_rails_mcp_config_dir
rails_mcp_log_dir = File.join(rails_mcp_config_dir, "log")

# Create config and log directories
FileUtils.mkdir_p(rails_mcp_log_dir)
puts "✓".green + " Created Rails MCP config directory: #{rails_mcp_config_dir}"
puts "✓".green + " Created Rails MCP log directory: #{rails_mcp_log_dir}"

# Create projects.yml in the config dir if it doesn't exist
projects_yml = File.join(rails_mcp_config_dir, "projects.yml")

if !File.exist?(projects_yml)
  # Create a new projects.yml with explanatory comments
  File.write(projects_yml, "# Rails MCP Projects\n# Format: project_name: /path/to/project\n")
  puts "✓".green + " Created projects.yml file"
  puts "!".yellow + " Please edit #{projects_yml} to add your Rails projects"
else
  puts "✓".green + " projects.yml already exists at #{projects_yml}"
end

# Detect OS for Claude Desktop config
claude_config_dir = if RUBY_PLATFORM.match?(/mswin|mingw|cygwin/)
  File.join(ENV["APPDATA"], "Claude")
else
  File.expand_path("~/Library/Application Support/Claude")
end
claude_config_file = File.join(claude_config_dir, "claude_desktop_config.json")

puts
puts "This script will configure Claude Desktop to use your Rails MCP Server.".blue
puts "This will modify: #{claude_config_file}".blue
puts "Rails MCP config directory: #{rails_mcp_config_dir}".blue
puts

# Ask for confirmation
print "Do you want to continue? (y/n) "
unless gets.chomp.casecmp("y").zero?
  puts "Setup canceled.".yellow
  exit(0)
end

# Create the config directory if it doesn't exist
FileUtils.mkdir_p(claude_config_dir)

# Full path to the rails-mcp-server executable
server_path = File.join(project_dir, "exe", "rails-mcp-server")

# Ensure the server is executable
FileUtils.chmod("+x", server_path)
puts "✓".green + " Made server executable"

# Create or update the Claude Desktop config file
config = {}

if File.exist?(claude_config_file)
  begin
    config = JSON.parse(File.read(claude_config_file))
  rescue JSON::ParserError
    puts "Error:".red + " Existing config file is not valid JSON. Creating backup and new config."
    FileUtils.cp(claude_config_file, "#{claude_config_file}.bak")
    config = {}
  end
end

# Update configuration
config["mcpServers"] ||= {}
# config["mcpServers"]["railsMcpServer"] = {"command" => "ruby", "args" => [server_path]}
config["mcpServers"]["railsMcpServer"] = {"command" => server_path, "args" => []}

# Write configuration back to file
File.write(claude_config_file, JSON.pretty_generate(config))

puts "✓".green + " Updated Claude Desktop configuration"
puts
puts "Setup completed!".blue
puts "!".yellow + " Please restart Claude Desktop to apply the changes."
puts
puts "Your Rails MCP Server is now configured at:".blue
puts "  #{server_path}"
puts
puts "Using config:".blue
puts "  Projects file: #{projects_yml}"
puts "  Log directory: #{rails_mcp_log_dir}"
puts
puts "To use it in Claude Desktop:".blue
puts "1. Restart Claude Desktop"
puts "2. Click on the plugin icon in the chat interface"
puts "3. Select 'Rails MCP Server' from the list"
puts
puts "!".yellow + " Don't forget to edit your projects.yml file to add your Rails projects:"
puts "  #{projects_yml}"
puts
puts "============================================".blue
